events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    # Increase server names hash bucket size for long UUIDs
    server_names_hash_bucket_size 128;
    
    # Enable DNS resolver for dynamic container resolution
    resolver 127.0.0.11 valid=30s;

    upstream api_backend {
        server server:3000;
    }

    # Main server for localhost (frontend and API)
    server {
        listen 80;
        server_name localhost;

        # Frontend
        location / {
            root /usr/share/nginx/html/frontend;
            index index.html;
            try_files $uri $uri/ /index.html;
        }

        # API routes
        location /api/ {
            proxy_pass http://api_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }

    # Subdomain server for workspace applications on specific ports
    # Pattern: projectid-port.localhost (e.g., projectid-5000.localhost)
    # NOTE: This MUST come before the general workspace pattern to match first
    server {
        listen 80;
        server_name ~^(?<workspace_id>[a-f0-9\-]+)-(?<app_port>[0-9]+)\.localhost$;

        location / {
            set $upstream workspace-$workspace_id:$app_port;
            
            # Proxy to application running in workspace container
            proxy_pass http://$upstream;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # WebSocket support for applications that need it
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_read_timeout 86400;
        }
    }

    # Subdomain server for workspace code-server instances
    # Pattern: projectid.localhost
    server {
        listen 80;
        server_name ~^(?<workspace_id>[a-f0-9\-]+)\.localhost$;

        location / {
            set $upstream workspace-$workspace_id:8080;
            
            # Proxy to code-server container
            proxy_pass http://$upstream;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # WebSocket support for code-server
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_read_timeout 86400;
        }
    }
}