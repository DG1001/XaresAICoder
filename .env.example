# XaresAICoder Environment Configuration
# =====================================
# For detailed port configuration guide, see: docs/PORT_CONFIGURATION.md
# Quick Reference: Local=80/80, Internal=8000/8000, External SSL=80/7200

# ===================
# APPLICATION SETTINGS
# ===================

# Workspace management settings
WORKSPACE_TIMEOUT_MINUTES=120
MAX_WORKSPACES_PER_USER=5

# Docker network name (managed automatically by Docker Compose)
DOCKER_NETWORK=xares-aicoder-network

# ===================
# PORT & DOMAIN CONFIGURATION
# ===================
# ‚ö†Ô∏è  IMPORTANT: These settings determine how URLs are generated and how traffic is routed
# üìö See docs/PORT_CONFIGURATION.md for detailed explanations and examples

# Domain name for workspace URLs (no http:// prefix)
BASE_DOMAIN=localhost

# Port for URL generation logic - determines if ":port" appears in workspace URLs
# - Set to 80: Creates clean URLs without port (e.g., http://workspace-id.localhost/)
# - Set to other: Includes port in URLs (e.g., http://workspace-id.localhost:8000/)
BASE_PORT=80

# Protocol for generated URLs (http or https)
# - For local/internal: use "http"
# - For external SSL proxy: use "http" (let external nginx handle HTTPS upgrade)
PROTOCOL=http

# Docker host port mapping - what port Docker exposes on the host machine
# - Local development: 80 (standard HTTP)
# - Internal server: 8000 (or any available port)  
# - External SSL proxy: 7200 (or any port that external nginx proxies to)
HOST_PORT=80

# ===================
# GIT SERVER (OPTIONAL)
# ===================

# Enable integrated Forgejo Git server
ENABLE_GIT_SERVER=false

# Git server admin configuration (only used if ENABLE_GIT_SERVER=true)
GIT_ADMIN_USER=developer
GIT_ADMIN_PASSWORD=admin123!
GIT_ADMIN_EMAIL=admin@xaresaicoder.local
GIT_SITE_NAME=XaresAICoder Git Server
GIT_SITE_DESCRIPTION=Integrated Git server for XaresAICoder development environment

# ===================
# GPU SUPPORT (OPTIONAL)
# ===================

# Enable GPU support for AI/ML workloads in workspaces
# - true: Enables NVIDIA GPU passthrough to workspace containers
# - false: Disables GPU support (default)
ENABLE_GPU=false

# ===================
# DOCKER IMAGES
# ===================

# Use pre-built images from registry instead of building locally
# - true: Faster deployment, uses GitHub Container Registry images
# - false: Builds images locally (slower but more control)
USE_REGISTRY_IMAGES=false

# Docker image names (automatically set based on USE_REGISTRY_IMAGES)
# Local build images:
SERVER_IMAGE=xares-aicoder-server:local
CODESERVER_IMAGE=xares-aicoder-codeserver:latest

# Registry images (used when USE_REGISTRY_IMAGES=true):
# SERVER_IMAGE=ghcr.io/yourusername/xaresaicoder-server:latest  
# CODESERVER_IMAGE=ghcr.io/yourusername/xaresaicoder-codeserver:latest

# ===================
# COMMON CONFIGURATIONS
# ===================
# Copy one of these configurations based on your deployment scenario:

# üè† LOCAL DEVELOPMENT
# BASE_DOMAIN=localhost
# BASE_PORT=80
# PROTOCOL=http  
# HOST_PORT=80

# üè¢ INTERNAL SERVER (Direct Access)
# BASE_DOMAIN=dev.company.internal
# BASE_PORT=8000
# PROTOCOL=http
# HOST_PORT=8000

# üåê INTERNET SERVER (External SSL Proxy)
# BASE_DOMAIN=coder.example.com
# BASE_PORT=80
# PROTOCOL=http
# HOST_PORT=7200